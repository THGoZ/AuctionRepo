// <auto-generated />
using System;
using Auction.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Auction.Core.Data.Migrations
{
    [DbContext(typeof(AuctionDBContext))]
    partial class AuctionDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Auction.Core.Entities.Factura", b =>
                {
                    b.Property<int>("IdFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFactura"));

                    b.Property<string>("Comprador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Monto");

                    b.Property<string>("Vendedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdFactura");

                    b.HasIndex("IdProducto");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("Auction.Core.Entities.Informe", b =>
                {
                    b.Property<int>("IdInforme")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInforme"));

                    b.Property<int>("IdSubasta")
                        .HasColumnType("int");

                    b.Property<decimal>("ganaciaVend")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("ganaciaVend");

                    b.Property<decimal>("gananciaEmpr")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("gananciaEmpr");

                    b.HasKey("IdInforme");

                    b.HasIndex("IdSubasta")
                        .IsUnique();

                    b.ToTable("Informes");
                });

            modelBuilder.Entity("Auction.Core.Entities.Oferta", b =>
                {
                    b.Property<int>("IdOferta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOferta"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Monto");

                    b.HasKey("IdOferta");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Ofertas");
                });

            modelBuilder.Entity("Auction.Core.Entities.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoDeSolicitud")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdSubasta")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<byte[]>("Imagen")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecioBase")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("PrecioBase");

                    b.HasKey("IdProducto");

                    b.HasIndex("IdSubasta");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Auction.Core.Entities.Subasta", b =>
                {
                    b.Property<int>("IdSubasta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSubasta"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCierre")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("FormaDePago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModoEntrega")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSubasta");

                    b.ToTable("Subastas");
                });

            modelBuilder.Entity("Auction.Core.Entities.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Apellido")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("apellido");

                    b.Property<string>("Ciudad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ciudad");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("contrasena");

                    b.Property<string>("Direccion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("direccion");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Auction.Core.Entities.Factura", b =>
                {
                    b.HasOne("Auction.Core.Entities.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("IdProducto");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Auction.Core.Entities.Informe", b =>
                {
                    b.HasOne("Auction.Core.Entities.Subasta", "Subasta")
                        .WithOne("Informe")
                        .HasForeignKey("Auction.Core.Entities.Informe", "IdSubasta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subasta");
                });

            modelBuilder.Entity("Auction.Core.Entities.Oferta", b =>
                {
                    b.HasOne("Auction.Core.Entities.Producto", "Producto")
                        .WithMany("Ofertas")
                        .HasForeignKey("IdProducto");

                    b.HasOne("Auction.Core.Entities.Usuario", "Usuario")
                        .WithMany("Ofertas")
                        .HasForeignKey("IdUsuario");

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Auction.Core.Entities.Producto", b =>
                {
                    b.HasOne("Auction.Core.Entities.Subasta", "Subasta")
                        .WithMany("Productos")
                        .HasForeignKey("IdSubasta");

                    b.HasOne("Auction.Core.Entities.Usuario", "Usuario")
                        .WithMany("Productos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subasta");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Auction.Core.Entities.Producto", b =>
                {
                    b.Navigation("Ofertas");
                });

            modelBuilder.Entity("Auction.Core.Entities.Subasta", b =>
                {
                    b.Navigation("Informe");

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Auction.Core.Entities.Usuario", b =>
                {
                    b.Navigation("Ofertas");

                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
